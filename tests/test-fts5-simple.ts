import { DatabaseManager } from '../src/database/db-manager.js';

async function testFTS5() {
  console.log('üîç FTS5Ê©üËÉΩ„ÅÆ„Ç∑„É≥„Éó„É´„ÉÜ„Çπ„Éà');
  console.log('==========================\n');

  try {
    const dbManager = new DatabaseManager('./test-fts5.db');
    dbManager.initialize();
    const db = dbManager.getDatabase();

    // „ÉÜ„Çπ„Éà„Éá„Éº„Çø„ÇíÊåøÂÖ•
    console.log('üìù „ÉÜ„Çπ„Éà„Éá„Éº„ÇøÊåøÂÖ•...');
    
    // È≠ö„ÅÆ„ÉÜ„Çπ„Éà„Éá„Éº„Çø
    const insertFish = db.prepare(`
      INSERT INTO fish (
        spec_code, genus, species, scientific_name, fb_name, family,
        length_cm, comments, remarks, saltwater
      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
    `);

    insertFish.run(1, 'Thunnus', 'thynnus', 'Thunnus thynnus', 'Atlantic bluefin tuna', 'Scombridae', 300, 
      'Â§ßÂûã„ÅÆÂõûÈÅäÈ≠ö„Åß„ÄÅÈ´òÈÄü„ÅßÊ≥≥„Åê„ÄÇÂïÜÊ•≠ÁöÑ„Å´ÈáçË¶Å„Å™È≠öÁ®Æ„ÄÇ', 
      'Âç±Èô∫ÊÄß„ÅØ‰Ωé„ÅÑ„Åå„ÄÅÂ§ß„Åç„Å™ÂÄã‰Ωì„ÅØÊ≥®ÊÑè„ÅåÂøÖË¶Å„ÄÇ', 1);

    insertFish.run(2, 'Carcharodon', 'carcharias', 'Carcharodon carcharias', 'Great white shark', 'Lamnidae', 600,
      'Â§ßÂûã„ÅÆËÇâÈ£üÊÄß„Çµ„É°„ÄÇÈùûÂ∏∏„Å´Âç±Èô∫„ÄÇ', 
      'Ê∑±Êµ∑„Åã„ÇâÊµÖÊµ∑„Åæ„ÅßÂ∫É„ÅèÂàÜÂ∏É„ÄÇÊîªÊíÉÁöÑ„ÅßÂç±Èô∫„Å™È≠ö„ÄÇ', 1);

    insertFish.run(3, 'Sebastes', 'marinus', 'Sebastes marinus', 'Golden redfish', 'Sebastidae', 100,
      'Ê∑±Êµ∑È≠ö„ÅÆ‰∏ÄÁ®Æ„ÄÇÁæé„Åó„ÅÑËµ§Ëâ≤„ÄÇ', 
      'Ê∑±Êµ∑„Å´ÁîüÊÅØ„Åô„Çã„ÄÇÊØí„ÅØ„Å™„ÅÑ„ÅåÊ£ò„Å´Ê≥®ÊÑè„ÄÇ', 1);

    // Êó•Êú¨Ë™ûÂêç„ÅÆ„ÉÜ„Çπ„Éà„Éá„Éº„Çø
    const insertCommonName = db.prepare(`
      INSERT INTO common_names (spec_code, com_name, language, preferred_name)
      VALUES (?, ?, ?, ?)
    `);

    insertCommonName.run(1, '„Éû„Ç∞„É≠', 'Japanese', 1);
    insertCommonName.run(1, '„Åæ„Åê„Çç', 'Japanese', 0);
    insertCommonName.run(1, 'ÈÆ™', 'Japanese', 0);
    insertCommonName.run(2, '„Éõ„Ç™„Ç∏„É≠„Ç∂„É°', 'Japanese', 1);
    insertCommonName.run(2, 'Â§ßÁôΩÈÆ´', 'Japanese', 0);
    insertCommonName.run(3, '„Ç¢„Ç´„Ç¶„Ç™', 'Japanese', 1);

    console.log('‚úÖ „ÉÜ„Çπ„Éà„Éá„Éº„ÇøÊåøÂÖ•ÂÆå‰∫Ü');

    // FTS5„Ç§„É≥„Éá„ÉÉ„ÇØ„Çπ„ÇíÊßãÁØâ
    console.log('üîß FTS5„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊßãÁØâ...');
    
    // content='fish' „Çí‰Ωø„Å£„Å¶„ÅÑ„Çã„ÅÆ„Åß„ÄÅfish„ÉÜ„Éº„Éñ„É´„ÇíÊõ¥Êñ∞„Åô„Çã„Å®Ëá™ÂãïÁöÑ„Å´FTS5„ÅåÊõ¥Êñ∞„Åï„Çå„Çã
    // „Åü„Å†„Åó„ÄÅjapanese_names„Å®english_names„ÅØ‰ªÆÊÉ≥„Ç´„É©„É†„Å™„ÅÆ„Åß„ÄÅ„Éà„É™„Ç¨„Éº„ÅßÁÆ°ÁêÜ„Åô„ÇãÂøÖË¶Å„Åå„ÅÇ„Çã
    
    // ‰ª£„Çè„Çä„Å´„ÄÅÂ§ñÈÉ®„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÉÜ„Éº„Éñ„É´„Çí‰Ωø„Çè„Å™„ÅÑÂçòÁ¥î„Å™FTS5„ÉÜ„Éº„Éñ„É´„Çí‰ΩúÊàê„Åó„Å¶„ÉÜ„Çπ„Éà
    db.exec(`DROP TABLE IF EXISTS fish_search_test`);
    db.exec(`
      CREATE VIRTUAL TABLE fish_search_test USING fts5(
        spec_code UNINDEXED,
        scientific_name,
        fb_name,
        comments,
        remarks,
        japanese_names,
        english_names,
        tokenize='unicode61 remove_diacritics 1'
      )
    `);
    
    const buildFTS = db.prepare(`
      INSERT INTO fish_search_test (spec_code, scientific_name, fb_name, comments, remarks, japanese_names, english_names)
      SELECT 
        f.spec_code,
        f.scientific_name,
        f.fb_name,
        COALESCE(f.comments, ''),
        COALESCE(f.remarks, ''),
        COALESCE(GROUP_CONCAT(CASE WHEN cn.language = 'Japanese' THEN cn.com_name END, ' '), ''),
        COALESCE(GROUP_CONCAT(CASE WHEN cn.language = 'English' THEN cn.com_name END, ' '), '')
      FROM fish f
      LEFT JOIN common_names cn ON f.spec_code = cn.spec_code
      GROUP BY f.spec_code, f.scientific_name, f.fb_name, f.comments, f.remarks
    `);

    buildFTS.run();
    console.log('‚úÖ FTS5„Ç§„É≥„Éá„ÉÉ„ÇØ„ÇπÊßãÁØâÂÆå‰∫Ü');

    // „Éá„Éê„ÉÉ„Ç∞: „Éá„Éº„Çø„ÇíÁ¢∫Ë™ç
    console.log('\nüîç „Éá„Éº„ÇøÁ¢∫Ë™ç');
    console.log('==============');
    
    const fishCount = db.prepare('SELECT COUNT(*) as count FROM fish').get() as {count: number};
    console.log(`È≠ö„Éá„Éº„Çø: ${fishCount.count}‰ª∂`);
    
    const ftsCount = db.prepare('SELECT COUNT(*) as count FROM fish_search_test').get() as {count: number};
    console.log(`FTS5„Éá„Éº„Çø: ${ftsCount.count}‰ª∂`);

    const sampleFts = db.prepare('SELECT * FROM fish_search_test LIMIT 1').get();
    console.log('FTS5„Çµ„É≥„Éó„É´„Éá„Éº„Çø:', sampleFts);

    // FTS5Ê§úÁ¥¢„ÉÜ„Çπ„Éà
    console.log('\nüîç FTS5Ê§úÁ¥¢„ÉÜ„Çπ„ÉàÈñãÂßã');
    console.log('====================');

    const testQueries = [
      '„Éû„Ç∞„É≠',
      'Âç±Èô∫',
      'Ê∑±Êµ∑',
      'Â§ßÂûã',
      'tuna',
      'shark',
      'Áæé„Åó„ÅÑ',
      'Thunnus'
    ];

    const searchQuery = db.prepare(`
      SELECT 
        spec_code,
        scientific_name,
        fb_name,
        comments,
        japanese_names,
        rank
      FROM fish_search_test
      WHERE fish_search_test MATCH ?
      ORDER BY rank
      LIMIT 5
    `);

    for (const query of testQueries) {
      console.log(`\nüîç Ê§úÁ¥¢: "${query}"`);
      console.log('‚îÄ'.repeat(30));
      
      try {
        const results = searchQuery.all(query);
        
        if (results.length === 0) {
          console.log('   ÁµêÊûú„Å™„Åó');
        } else {
          results.forEach((row: any, index: number) => {
            console.log(`   ${index + 1}. ${row.japanese_names || row.fb_name}`);
            console.log(`      Â≠¶Âêç: ${row.scientific_name}`);
            console.log(`      Ë™¨Êòé: ${row.comments}`);
          });
        }
      } catch (error) {
        console.log(`   „Ç®„É©„Éº: ${error}`);
      }
    }

    // Êó•Êú¨Ë™ûÊ§úÁ¥¢„ÅÆÊîπÂñÑ„ÉÜ„Çπ„Éà
    console.log('\nüîç Êó•Êú¨Ë™ûÊ§úÁ¥¢„ÅÆÂàÜÊûê');
    console.log('===================');
    
    // ÂÆüÈöõ„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ„ÇíÁ¢∫Ë™ç
    const allData = db.prepare('SELECT * FROM fish_search_test').all();
    console.log('\n‰øùÂ≠ò„Åï„Çå„Å¶„ÅÑ„Çã„Éá„Éº„Çø:');
    allData.forEach((row: any) => {
      console.log(`- ${row.japanese_names}: ${row.comments} | ${row.remarks}`);
    });

    // È´òÂ∫¶„Å™FTS5Ê©üËÉΩ„ÉÜ„Çπ„Éà
    console.log('\nüîç È´òÂ∫¶„Å™FTS5Ê©üËÉΩ„ÉÜ„Çπ„Éà');
    console.log('========================');

    const advancedQueries = [
      'Âç±Èô∫ AND Â§ßÂûã',    // ANDÊ§úÁ¥¢
      '"Ê∑±Êµ∑È≠ö"',         // „Éï„É¨„Éº„Ç∫Ê§úÁ¥¢
      '„Éû„Ç∞„É≠ OR „Çµ„É°',   // ORÊ§úÁ¥¢
      'tun*',            // „ÉØ„Ç§„É´„Éâ„Ç´„Éº„Éâ
      'Â§ßÂûã„ÅÆ',          // Âä©Ë©û‰ªò„Åç
      'ÂõûÈÅäÈ≠ö',          // Ë§áÂêàË™û
      'ÂïÜÊ•≠ÁöÑ',          // ÂΩ¢ÂÆπË©û
      'Âç±Èô∫ÊÄß',          // ÂêçË©û
    ];

    for (const query of advancedQueries) {
      console.log(`\nüîç È´òÂ∫¶Ê§úÁ¥¢: "${query}"`);
      console.log('‚îÄ'.repeat(40));
      
      try {
        const results = searchQuery.all(query);
        
        if (results.length === 0) {
          console.log('   ÁµêÊûú„Å™„Åó');
        } else {
          results.forEach((row: any, index: number) => {
            console.log(`   ${index + 1}. ${row.japanese_names || row.fb_name}`);
          });
        }
      } catch (error) {
        console.log(`   „Ç®„É©„Éº: ${error}`);
      }
    }

    // ÂÖ®ÊñáÊ§úÁ¥¢„ÉÜ„Çπ„Éà
    console.log('\nüîç ÂÖ®Êñá‰∏ÄËá¥Ê§úÁ¥¢„ÉÜ„Çπ„Éà');
    console.log('======================');
    
    const fullTextQueries = [
      'Â§ßÂûã„ÅÆÂõûÈÅäÈ≠ö',       // „Éï„É´„Éï„É¨„Éº„Ç∫
      'ÂõûÈÅä',              // ÈÉ®ÂàÜÊñáÂ≠óÂàó
      'Âç±Èô∫ÊÄß„ÅØ‰Ωé„ÅÑ',       // „Éï„É¨„Éº„Ç∫
      'Ê∑±Êµ∑„Å´ÁîüÊÅØ',         // „Éï„É¨„Éº„Ç∫
      'Áæé„Åó„ÅÑËµ§Ëâ≤',         // „Éï„É¨„Éº„Ç∫
    ];
    
    for (const query of fullTextQueries) {
      console.log(`\nüîç ÂÖ®ÊñáÊ§úÁ¥¢: "${query}"`);
      console.log('‚îÄ'.repeat(40));
      
      try {
        const results = searchQuery.all(query);
        
        if (results.length === 0) {
          console.log('   ÁµêÊûú„Å™„Åó');
        } else {
          results.forEach((row: any, index: number) => {
            console.log(`   ${index + 1}. ${row.japanese_names || row.fb_name}`);
            console.log(`      „Ç≥„É°„É≥„Éà: ${row.comments}`);
          });
        }
      } catch (error) {
        console.log(`   „Ç®„É©„Éº: ${error}`);
      }
    }

    console.log('\n‚úÖ FTS5Ê©üËÉΩ„ÉÜ„Çπ„ÉàÂÆå‰∫Ü');

  } catch (error) {
    console.error('‚ùå „Ç®„É©„Éº:', error);
  }
}

testFTS5().catch(console.error);